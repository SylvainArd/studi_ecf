name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  copy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create .ssh directory
        run: mkdir -p ~/.ssh

      - name: Add EC2 Instance 1 to known_hosts
        run: ssh-keyscan -H ${{ secrets.EC2_FRONTEND_HOST_1 }} >> ~/.ssh/known_hosts

      - name: Copy code to EC2 Instance 1
        env:
          HOST: ${{ secrets.EC2_FRONTEND_HOST_1 }}
          USERNAME: ${{ secrets.EC2_USER }}
          KEY: ${{ secrets.EC2_KEY }}
        run: |
          echo "$KEY" > key.pem
          chmod 600 key.pem
          rsync -avz -e "ssh -i key.pem" hello-world-frontend/ $USERNAME@$HOST:/home/$USERNAME/hello-world-frontend/
          rm key.pem

      - name: Add EC2 Instance 2 to known_hosts
        run: ssh-keyscan -H ${{ secrets.EC2_FRONTEND_HOST_2 }} >> ~/.ssh/known_hosts

      - name: Copy code to EC2 Instance 2
        env:
          HOST: ${{ secrets.EC2_FRONTEND_HOST_2 }}
          USERNAME: ${{ secrets.EC2_USER }}
          KEY: ${{ secrets.EC2_KEY }}
        run: |
          echo "$KEY" > key.pem
          chmod 600 key.pem
          rsync -avz -e "ssh -i key.pem" hello-world-frontend/ $USERNAME@$HOST:/home/$USERNAME/hello-world-frontend/
          rm key.pem

  test:
    runs-on: ubuntu-latest
    needs: copy

    steps:
      - name: Create .ssh directory
        run: mkdir -p ~/.ssh

      - name: Add EC2 Instance 1 to known_hosts
        run: ssh-keyscan -H ${{ secrets.EC2_FRONTEND_HOST_1 }} >> ~/.ssh/known_hosts

      - name: Test on EC2 Instance 1
        env:
          HOST: ${{ secrets.EC2_FRONTEND_HOST_1 }}
          USERNAME: ${{ secrets.EC2_USER }}
          KEY: ${{ secrets.EC2_KEY }}
        run: |
          echo "$KEY" > key.pem
          chmod 600 key.pem
          ssh -i key.pem $USERNAME@$HOST "curl -fsSL https://rpm.nodesource.com/setup_20.x | sudo bash -"
          ssh -i key.pem $USERNAME@$HOST "sudo yum install -y nodejs"
          ssh -i key.pem $USERNAME@$HOST "mkdir -p /home/$USERNAME/hello-world-frontend"
          ssh -i key.pem $USERNAME@$HOST "cd /home/$USERNAME/hello-world-frontend && npm install"
          ssh -i key.pem $USERNAME@$HOST "cd /home/$USERNAME/hello-world-frontend && npm test -- --watchAll=false"
          rm key.pem

      - name: Add EC2 Instance 2 to known_hosts
        run: ssh-keyscan -H ${{ secrets.EC2_FRONTEND_HOST_2 }} >> ~/.ssh/known_hosts

      - name: Test on EC2 Instance 2
        env:
          HOST: ${{ secrets.EC2_FRONTEND_HOST_2 }}
          USERNAME: ${{ secrets.EC2_USER }}
          KEY: ${{ secrets.EC2_KEY }}
        run: |
          echo "$KEY" > key.pem
          chmod 600 key.pem
          ssh -i key.pem $USERNAME@$HOST "curl -fsSL https://rpm.nodesource.com/setup_20.x | sudo bash -"
          ssh -i key.pem $USERNAME@$HOST "sudo yum install -y nodejs"
          ssh -i key.pem $USERNAME@$HOST "mkdir -p /home/$USERNAME/hello-world-frontend"
          ssh -i key.pem $USERNAME@$HOST "cd /home/$USERNAME/hello-world-frontend && npm install"
          ssh -i key.pem $USERNAME@$HOST "cd /home/$USERNAME/hello-world-frontend && npm test -- --watchAll=false"
          rm key.pem

  build:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Create .ssh directory
        run: mkdir -p ~/.ssh

      - name: Add EC2 Instance 1 to known_hosts
        run: ssh-keyscan -H ${{ secrets.EC2_FRONTEND_HOST_1 }} >> ~/.ssh/known_hosts

      - name: Build on EC2 Instance 1
        env:
          HOST: ${{ secrets.EC2_FRONTEND_HOST_1 }}
          USERNAME: ${{ secrets.EC2_USER }}
          KEY: ${{ secrets.EC2_KEY }}
        run: |
          echo "$KEY" > key.pem
          chmod 600 key.pem
          ssh -i key.pem $USERNAME@$HOST "cd /home/$USERNAME/hello-world-frontend && npm run build"
          rm key.pem

      - name: Add EC2 Instance 2 to known_hosts
        run: ssh-keyscan -H ${{ secrets.EC2_FRONTEND_HOST_2 }} >> ~/.ssh/known_hosts

      - name: Build on EC2 Instance 2
        env:
          HOST: ${{ secrets.EC2_FRONTEND_HOST_2 }}
          USERNAME: ${{ secrets.EC2_USER }}
          KEY: ${{ secrets.EC2_KEY }}
        run: |
          echo "$KEY" > key.pem
          chmod 600 key.pem
          ssh -i key.pem $USERNAME@$HOST "cd /home/$USERNAME/hello-world-frontend && npm run build"
          rm key.pem

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Create .ssh directory
        run: mkdir -p ~/.ssh

      - name: Add EC2 Instance 1 to known_hosts
        run: ssh-keyscan -H ${{ secrets.EC2_FRONTEND_HOST_1 }} >> ~/.ssh/known_hosts

      - name: Deploy to EC2 Instance 1
        env:
          HOST: ${{ secrets.EC2_FRONTEND_HOST_1 }}
          USERNAME: ${{ secrets.EC2_USER }}
          KEY: ${{ secrets.EC2_KEY }}
        run: |
          echo "$KEY" > key.pem
          chmod 600 key.pem
          ssh -i key.pem $USERNAME@$HOST "sudo cp -r /home/$USERNAME/hello-world-frontend/build/* /usr/share/nginx/html/ && sudo systemctl restart nginx"
          rm key.pem

      - name: Add EC2 Instance 2 to known_hosts
        run: ssh-keyscan -H ${{ secrets.EC2_FRONTEND_HOST_2 }} >> ~/.ssh/known_hosts

      - name: Deploy to EC2 Instance 2
        env:
          HOST: ${{ secrets.EC2_FRONTEND_HOST_2 }}
          USERNAME: ${{ secrets.EC2_USER }}
          KEY: ${{ secrets.EC2_KEY }}
        run: |
          echo "$KEY" > key.pem
          chmod 600 key.pem
          ssh -i key.pem $USERNAME@$HOST "sudo cp -r /home/$USERNAME/hello-world-frontend/build/* /usr/share/nginx/html/ && sudo systemctl restart nginx"
          rm key.pem
